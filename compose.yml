services:
  proxy:
    build: services/proxy
    pull_policy: build
    restart: always
    depends_on:
      - orion
      - dashboard
    environment:
      - API_KEY=$API_KEY

  mongo:
    image: mongo:4.2
    restart: always
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb

  orion:
    image: fiware/orion:3.3.0
    restart: always
    depends_on:
      - mongo
    entrypoint: ["sh", "-c", "rm /tmp/contextBroker.pid; /usr/bin/contextBroker -fg -multiservice -dbhost mongo -corsOrigin __ALL"]
    environment:
      - ORION_LOG_LEVEL=DEBUG
      - CORS_ALLOWED_ORIGIN=*
      - CORS_ALLOWED_ORIGIN=http://localhost:8000

  crate:
    image: crate:4.5.1
    container_name: crate
    ports:
      - "4200:4200"
      - "5432:5432"
    environment:
      - CRATE_HEAP_SIZE=1g
      - CRATE_CLUSTER_NAME=crate-cluster
    command: crate -Cauth.host_based.enabled=false

  quantumleap:
    image: orchestracities/quantumleap:0.8.3
    container_name: quantumleap
    depends_on:
      - crate
    ports:
      - "8668:8668"
    environment:
      - CRATE_HOST=crate
      - LOGLEVEL=DEBUG


  dashboard:
    build: services/dashboard
    pull_policy: build
    restart: always

  collector:
    build:
      context: services/collector
      dockerfile: Dockerfile
    pull_policy: build
    restart: always
    depends_on:
    - orion
    environment:
    - OWM_API_KEY=$OPEN_WEATHER_MAP_API_KEY

  scheduled:
    build: services/scheduled
    pull_policy: build
    restart: always
    depends_on:
    - orion

  dashbot:
    image: ghcr.io/imiq-project/dashbot:latest
    restart: always
    depends_on:
    - orion
    environment:
    - FIWARE_URL=http://orion:1026/v2

  dayplanner:
    build: services/dayplanner
    restart: always
    pull_policy: build
    environment:
      - APP_SECRET=$DAILYPLAN_APP_SECRET

volumes:
  mongo_data:
  mongo_config:
